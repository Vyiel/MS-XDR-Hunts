// Detection of Unusualness for any cases, but for this example, using DeviceNetworkEvents.
// 
// In MS XDR, The dynamic part of detection is done by MS XDR itself. CTH writes static rules/hunts to find out anomalies manually and somewhat statically. 
// In this example, I have tried to mimic a dynamic detection of sorts so that items less or more relevent than others, in brief outliers will be flagged.
// 
// This example is just an example, that can be translated to anything else in XDR. In this case, I tried to see which IPs are unusual. The basis of the calculation is by comparing the complete environment's data.
// Hypothesis:
// - Take all the connections of IPs and group them by ID
// - Derive Mean from Total Connects / Count of IPs
// - Derive Standard Deviation and Zscore
// - Compare each IPs from initial query to the standard deviation. 
// - If deviation above 2 stops, flag them.
// 
// I am doing stats on KQL the first time, and I am sure it can be way better, but till then, here it is...
// 
let lookback = ago(30d);
// 
let allConnectionsPerIP = 
    DeviceNetworkEvents
    | where isnotempty( RemoteIP )
    | where Timestamp >= lookback
    | summarize ConnectCounts = count() by RemoteIP;
// 
let Stats = 
    allConnectionsPerIP
    | summarize Mean = avg(ConnectCounts), StDev = stdev(ConnectCounts);
// 
allConnectionsPerIP
| extend placeholder = 1
| join kind=inner (Stats | extend placeholder = 1) on placeholder
| extend ZscoreDirectional = ((ConnectCounts - Mean) / StDev)
| extend ZscoreOutLiers = abs(ZscoreDirectional)
| extend Unusualness = case(
    ZscoreOutLiers > 5, "Extreme",
    ZscoreOutLiers > 3, "Severe",
    ZscoreOutLiers > 2, "Moderate",
    "Normal")
| extend UnusualnessReason= case(
    ZscoreDirectional > 0, "High Relevance",
    ZscoreDirectional < 0, "Low Relevance",
    ""
    )
| where ZscoreOutLiers > 2
| project-away Mean, StDev, ZscoreOutLiers, placeholder, placeholder1, ZscoreDirectional
