// Detection of Credential theft via Invoke-Mimikatz, the file-less version.
//
// Things differ from the actual mimikatz here as the original executable version was file-based malware which left fingerprints on disk. And secondly the approach was more direct towards reading/copying
// lsass.exe process memory. 
// In the case of the powershell version (https://github.com/clymb3r/PowerShell/blob/master/Invoke-Mimikatz/Invoke-Mimikatz.ps1), it's first of all fileless which means that it can be directly be
// downloaded from github, and the contents can be directly loaded into the parent process (such as Powershell), and executed. This leaves very less fingerprint and atleast I after multiple runs even,
// didn't see lsass.exe being read/copied.
//
// I was actually not able to find good amount of data in the tables, not atleast before multiple tries with separate settings, to find an anomaly, that is whenever invoke-mimikatz is executed,
// the same powershell spanws a whoami.exe with the command line whoami /user, which is stored in the DeviceProcessEvents table.
//
// Apparently, in the same time, DeviceEvents table tells you the full story of the invoking module itself. Within which, I just concentrated on read and write memory and execute with createRemoteThread.
// Luckily these activities happen in the same powershell whoami spawned for making it easier to track by parent process ID.
//
let ProcessTable = materialize ( 
    DeviceProcessEvents
    | where ProcessVersionInfoInternalFileName == "whoami.exe"
    | where ActionType == "ProcessCreated"
    | where ProcessTokenElevation == "TokenElevationTypeFull"
    | where InitiatingProcessFileName has_any ("powershell", "cmd", "wmi", "wscript")
    | extend ProcessTime = bin(Timestamp, 1s)
    | project ProcessTime, DeviceName, ActionType, ProcessTokenElevation, InitiatingProcessFileName, ProcessTableInitProcID = InitiatingProcessId );
DeviceEvents
| join kind=inner ( ProcessTable ) on DeviceName
| extend DeviceTime = bin(Timestamp, 1s)
| where DeviceTime == ProcessTime
| extend ParsedFields = parse_json(AdditionalFields)
| extend DumpCredsCommand = tostring(ParsedFields.Command)
| extend ifMemCpyAddr = tostring(ParsedFields.Command)
| where InitiatingProcessId == ProcessTableInitProcID 
| where DumpCredsCommand has_any ("Mimikatz") 
or ifMemCpyAddr has_any ("memcpyAddr", "Get-ProcAddress", "WriteProcessMemory", "CreateRemoteThread")
| extend oneHourTimeGap = bin(Timestamp, 1h)
| summarize by oneHourTimeGap, DeviceName, ProcessCommandLine, InitiatingProcessFileName, InitiatingProcessCommandLine
