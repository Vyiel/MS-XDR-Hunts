Detecting theft of credentials via dumping SAM off of registry, via reg.exe

With this one, I originally thought that I would get enough enriched data to analyze from deviceRegistryEvents, deviceProcessEvents AND deviceEvents. 
Unfortunately, simulating this in lab, got me nowhere. Registry table was empty at the time of test. Device Process events did show reg.exe against "Process Start", followed up with details.

So, no specific patterns were found. A query can still be created obviously based on process tree schema and static patterns, but it won't work on the slightest use of obfuscation.
So after much tries, I noticed, that whatever happens, process call to reg.exe is there no matter what. And along always, for deviceEvents table the action type is: "ProcessPrimaryTokenModified" with a detail of: Privileges were added to the process.
And almost static, but I used regex to search for the specific letters: hklm, sam, system, security. Atleast we are now covered with some sort of obfuscation. Tested and was happy with the results.
Thus the query as follows.

Not to mention, if you can write something better than me, do contribute. Thanks.

DeviceEvents
| where ActionType == "ProcessPrimaryTokenModified"
| where InitiatingProcessFileName has "reg.exe" and InitiatingProcessVersionInfoCompanyName has "Microsoft Corporation"
| where InitiatingProcessCommandLine matches regex @"(?i)h[^a-zA-Z]*k[^a-zA-Z]*l[^a-zA-Z]*m"
| where InitiatingProcessCommandLine matches regex @"(?i)s[^a-zA-Z]*a[^a-zA-Z]*m"
or InitiatingProcessCommandLine matches regex @"(?i)s[^a-zA-Z]*y[^a-zA-Z]*s[^a-zA-Z]*t[^a-zA-Z]*e[^a-zA-Z]*m" 
or InitiatingProcessCommandLine matches regex @"(?i)s[^a-zA-Z]*e[^a-zA-Z]*c[^a-zA-Z]*u[^a-zA-Z]*r[^a-zA-Z]*i[^a-zA-Z]*t[^a-zA-Z]*y"
| extend ifTokenChange = tostring(parse_json(AdditionalFields).TokenModificationProperties)
| extend tokenChangeDesc = parse_json(ifTokenChange).tokenChangeDescription
| where tokenChangeDesc has "Privileges were added to the process"
| summarize DetectionCount = count(), 
            FirstTimeDetected = min(Timestamp), 
            LastTimeDetected = max(Timestamp) 
  by DeviceName, InitiatingProcessFileName, InitiatingProcessCommandLine
| project DeviceName, InitiatingProcessFileName, InitiatingProcessCommandLine, DetectionCount, FirstTimeDetected, LastTimeDetected 
| order by FirstTimeDetected desc
