// Detect usage of Mimikatz.exe in Credential Stealing
//
// This is not to find for presence of Mimikatz.exe, the original GitHub edition but to find for its traces of usage, specific to credential stealing.
// This could have been done through multiple ways, such as specific process tree schema, specific detection patters, but I wanted something more fundamental. Something true to its core logic.
//
// The logic of its functionality, is that it dumps lsass.exe's memory to read its contents and extract the password hashes.
// To be able to do that, it needs access to OpenProcess API, ReadProcessAPI, and a debugPrivilege activity.
// Also, an adversary can encrypt Mimikatz transit or change its name, so I went ahead with its internal file name, which still remains to be Mimikatz unless the adversary compiles one on their own. In that case, we can remove the internal filename segment, but that will also result in a lot of False Positives.
//
DeviceEvents
| where ActionType in ("OpenProcessApiCall", "ReadProcessMemoryApiCall", "ProcessPrimaryTokenModified")
| where FileName has ("lsass.exe")
| where InitiatingProcessVersionInfoInternalFileName contains @"mimikatz"
| summarize DetectionCount = count(), 
            FirstTimeDetected = min(Timestamp), 
            LastTimeDetected = max(Timestamp) 
  by DeviceName, InitiatingProcessFileName
| project DeviceName, InitiatingProcessFileName, DetectionCount, FirstTimeDetected, LastTimeDetected 
| order by FirstTimeDetected desc
